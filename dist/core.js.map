{"version":3,"file":"core.js","mappings":"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","sources":["webpack://MuddeCore/./src/Core/ChainOfResponsibility/BaseHandler.ts","webpack://MuddeCore/./src/Core/ChainOfResponsibility/index.ts","webpack://MuddeCore/./src/Core/ConfigurableAbstract.ts","webpack://MuddeCore/./src/Core/NodeCore.ts","webpack://MuddeCore/./src/Core/ObserverPattern/Event.ts","webpack://MuddeCore/./src/Core/ObserverPattern/ObserverAbstract.ts","webpack://MuddeCore/./src/Core/ObserverPattern/SubjectAbstract.ts","webpack://MuddeCore/./src/Core/ObserverPattern/index.ts","webpack://MuddeCore/./src/Core/index.ts","webpack://MuddeCore/./src/Helper/GuidHelper.ts","webpack://MuddeCore/./src/Helper/StringHelper.ts","webpack://MuddeCore/./src/Helper/index.ts","webpack://MuddeCore/webpack/bootstrap","webpack://MuddeCore/./src/index.ts"],"sourcesContent":["/**\r\n * Chain of responsibility base handler\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nimport { HandlerInterface } from \"./HandlerInterface\"\r\n\r\nexport abstract class BaseHandler implements HandlerInterface {\r\n\r\n  abstract handler(data)\r\n\r\n  private _nextEvent?: HandlerInterface | undefined\r\n  \r\n  setNext(event: HandlerInterface): HandlerInterface {\r\n    this._nextEvent = event\r\n\r\n    return event\r\n  }\r\n\r\n  handle(data: any) {\r\n    this.handler(data)\r\n\r\n    if (this._nextEvent) {\r\n      this._nextEvent.handle(data)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  public get nextEvent(): HandlerInterface | undefined {\r\n    return this._nextEvent\r\n  }\r\n}","// created from 'create-ts-index'\nexport * from './BaseHandler';\nexport * from './HandlerInterface';","/**\r\n * This will automatically configure your object\r\n * \r\n * example\r\n * ---------------\r\n * import { ConfigurableAbstract } from \"../node_modules/mudde-core/src/Core/ConfigurableAbstract\";\r\n * \r\n * export class Form extends ConfigurableAbstract {\r\n * \r\n *    private _id: string = ''                   //  <-- empty init\r\n *    private _languages: string[] = []\r\n * \r\n *    constructor(config: any) {\r\n *       super()\r\n * \r\n *       this.configuring(config)\r\n *    }\r\n * \r\n *    getDefaultConfig(): any {                 //  <-- set the default values of all \r\n *       return {                               //      the fields you want to configure\r\n *          id: GuidHelper.raw(),\r\n *          languages: ['nl'],\r\n *       }\r\n *    }\r\n * \r\n *    private configureLanguages(rawFields: Object[]): void {     //  <-- if you want some extra checks\r\n *       .. your code here                                        //      or create a new object create\r\n *    }                                                           //      a method with the following signature\r\n *                                                                //      configure<property name>(rawFields: Object[]): void\r\n *  }\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nimport { StringHelper } from \"../Helper/StringHelper\"\r\n\r\nexport abstract class ConfigurableAbstract{\r\n\r\n   configuring(config: any) {\r\n      let defaultConfig = this.getDefaultConfig()\r\n\r\n      for (let key in defaultConfig) {\r\n         let methodName = 'configure' + StringHelper.ucFirst(key)\r\n         let hasMethod = this[methodName] !== undefined\r\n         let value = config[key] ?? defaultConfig[key]\r\n\r\n         if (hasMethod) {\r\n            this[methodName](value)\r\n         } else {\r\n            this[key] = value\r\n         }\r\n      }\r\n   }\r\n\r\n   abstract getDefaultConfig(): any\r\n}","/**\r\n * Generate and maniputate HTMLElements more easy\r\n *\r\n * example\r\n * ---------------\r\n * let node = new NodeCore('div', {class:'container'})\r\n * node.appendElement_('div', {class:'row'})\r\n *        .appendElement_('div', {class:'col'})\r\n *           .appendElement('a', {href:'#', class:'btn btn-default'}, 'Click Me!')\r\n *        ._()\r\n *        .appendElement_('div', {class:'col'})\r\n *           .appendElement('img', {src:'#', class:'photo'})\r\n *        ._()\r\n * -------\r\n * OUTPUTS\r\n * -------\r\n * <div class='container'>\r\n *    <div class='row'>\r\n *       <div class='col'>\r\n *          <a href='#' class='btn btn-default'>\r\n *       </div>\r\n *       <div class='col'>\r\n *          <img src='#' class='photo'>\r\n *       </div>\r\n *    </div>\r\n * </div>\r\n * \r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) copyright 2021 - Olaf Mudde\r\n * @license       MIT\r\n */\r\n export class NodeCore<T = HTMLElement> {\r\n\r\n   private _root?: HTMLElement | HTMLFormElement | HTMLInputElement\r\n   private _current?: HTMLElement\r\n   private _document?: Document\r\n   private _idSearch: HTMLElement[] = []\r\n   private _click: string[] = ['click']\r\n   private _change: string[] = ['keydown', 'keypress', 'keyup', 'mousedown', 'mouseup', 'change']\r\n\r\n   constructor(tagName: string, attributes?: any, text?: string, documentX?: Document) {\r\n\r\n      this._document = documentX ?? document\r\n\r\n      this._root = this._current = tagName[0] === '#'\r\n         ? this.getNodeById(tagName.substring(1))\r\n         : this.createNode(tagName, attributes, text)\r\n\r\n   }\r\n\r\n   private getNodeById(nodeId: string): HTMLElement {\r\n      let document = this.document\r\n      let element = document.getElementById(nodeId)\r\n\r\n      if (!element) throw new Error('Element not found by id!')\r\n\r\n      return element\r\n   }\r\n\r\n   private createNode(tagName: string, attributes?: any, text?: string): HTMLElement {\r\n      let document = this.document\r\n      let node = document.createElement(tagName)\r\n\r\n      if (attributes) {\r\n         for (let key in attributes) {\r\n            let value = attributes[key]\r\n\r\n            if (key === 'id') {\r\n               this._idSearch[value] = node\r\n            }\r\n\r\n            node.setAttribute(key, value)\r\n         }\r\n      }\r\n\r\n      if (text) {\r\n         node.innerText = text\r\n      }\r\n\r\n      return node\r\n   }\r\n\r\n   click(callable: EventListener): NodeCore {\r\n      let current: HTMLElement = this.current\r\n\r\n      this._click.forEach((name) => {\r\n         current.addEventListener(name, callable)\r\n      })\r\n\r\n      return this\r\n   }\r\n\r\n   change(callable: EventListener): NodeCore {\r\n      let current: HTMLElement = this.current\r\n\r\n      this._change.forEach((name) => {\r\n         current.addEventListener(name, callable)\r\n      })\r\n\r\n      return this\r\n   }\r\n\r\n   moveInNode(callable: CallableFunction): NodeCore {\r\n      let current: HTMLElement = this.current\r\n      let tmpNode = this.document.createElement('div')\r\n\r\n      current.replaceWith(tmpNode)\r\n\r\n      let newNodeRaw = callable(current)\r\n      let newNode = this.importElement(newNodeRaw)\r\n\r\n      tmpNode.replaceWith(newNode)\r\n\r\n      return this\r\n   }\r\n\r\n   removeChildren(): NodeCore {\r\n      let current = this.current\r\n\r\n      current.childNodes.forEach(child => {\r\n         current.removeChild(child)\r\n      })\r\n\r\n      return this\r\n   }\r\n\r\n   removeChild(node: NodeCore | HTMLElement): NodeCore {\r\n      let nodeX = node instanceof NodeCore ? node.root : node\r\n\r\n      this.current.removeChild(nodeX)\r\n\r\n      return this\r\n   }\r\n\r\n   addSibling_(tagName: string, attributes?: any, text?: string): NodeCore {\r\n      return this.addSibling(tagName, attributes, text, true)\r\n   }\r\n\r\n   addSibling(tagName: string, attributes?: any, text?: string, setCurrent: boolean = false): NodeCore {\r\n      let newNode = this.createNode(tagName, attributes, text)\r\n      let parent = this.current.parentNode;\r\n\r\n      parent?.insertBefore(newNode, this.current)\r\n\r\n      if (setCurrent) {\r\n         this._current = newNode\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   addSiblingNode_(node: NodeCore): NodeCore {\r\n      return this.addSiblingNode(node, true)\r\n   }\r\n\r\n   addSiblingNode(node: NodeCore, setCurrent: boolean = false): NodeCore {\r\n      let newNode = this.importElement(node)\r\n      let current = this.current\r\n      let parent = current.parentElement;\r\n\r\n      parent?.insertBefore(newNode, current)\r\n\r\n      if (setCurrent) {\r\n         this._current = newNode\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   addClass(className: string): NodeCore {\r\n      let currentClass = this.current.className\r\n\r\n      this.current.setAttribute('class', `${currentClass} ${className}`.trimLeft())\r\n\r\n      return this\r\n   }\r\n\r\n   removeClass(className: string): NodeCore {\r\n      let currentClass = ' ' + this.current.className + ' '\r\n\r\n      this.current.setAttribute('class', currentClass.replace(' ' + className + ' ', ' ').trim())\r\n\r\n      return this\r\n   }\r\n\r\n\r\n   clear() {\r\n      let root = this._current = this.root\r\n\r\n      root.innerHTML = ''\r\n   }\r\n\r\n   getAttribute(name: string): string | null {\r\n      return this.current.getAttribute(name)\r\n   }\r\n\r\n   getElementById(id: string): NodeCore {\r\n      if (id in this._idSearch) {\r\n         this._current = this._idSearch[id]\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   getElementByTagName(tagName: string): HTMLCollectionOf<Element> {\r\n      let element = this.root.getElementsByTagName(tagName)\r\n\r\n      return element\r\n   }\r\n\r\n   getElementByClass(className: string): HTMLCollectionOf<Element> {\r\n      let element = this.root.getElementsByClassName(className)\r\n\r\n      return element\r\n   }\r\n\r\n   hasAttribute(name: string): boolean {\r\n      return this.current.hasAttribute(name)\r\n   }\r\n\r\n   hasElementById(id: string): boolean {\r\n      return id in this._idSearch\r\n   }\r\n\r\n   hasElementByClass(className: string): boolean {\r\n      return this.root.getElementsByClassName(className).length !== 0\r\n   }\r\n\r\n   a(tagName: string, attributes?: any, text?: string, setCurrent?: boolean): NodeCore {\r\n      return this.appendNode(tagName, attributes, text, setCurrent)\r\n   }\r\n\r\n   prependNode_(tagName: string, attributes?: any, text?: string): NodeCore {\r\n      return this.prependNode(tagName, attributes, text, true)\r\n   }\r\n\r\n   prependNode(tagName: string, attributes?: any, text?: string, setCurrent?: boolean): NodeCore {\r\n      let firstChild = this.current.firstChild\r\n\r\n      if (firstChild) {\r\n         let HTMLElement = this.current.insertBefore(this.createNode(tagName, attributes, text), firstChild)\r\n\r\n         if (setCurrent === true) {\r\n            this._current = HTMLElement\r\n         }\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   appendNode(tagName: string, attributes?: any, text?: string, setCurrent: boolean = false): NodeCore {\r\n      let newNode = this.createNode(tagName, attributes, text)\r\n      let HTMLElement = this.current.appendChild(newNode)\r\n\r\n      HTMLElement.innerText = text ? text : ''\r\n\r\n      if (setCurrent === true) {\r\n         this._current = HTMLElement\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   a_(tagName: string, attributes?: any, text?: string): NodeCore {\r\n      return this.appendNode(tagName, attributes, text, true)\r\n   }\r\n\r\n   appendNode_(tagName: string, attributes?: any, text?: string): NodeCore {\r\n      return this.appendNode(tagName, attributes, text, true)\r\n   }\r\n\r\n   toHTML(outerHTML: boolean = true): string {\r\n      let root: HTMLElement = this.root\r\n      return outerHTML ? root.outerHTML : root.innerHTML\r\n   }\r\n\r\n   setAttributes(attributes: any): NodeCore {\r\n      let node = this.current\r\n\r\n      for (let key in attributes) {\r\n         let value = attributes[key]\r\n\r\n         if (key === 'id') {\r\n            this._idSearch[value] = node\r\n         }\r\n\r\n         node.setAttribute(key, value)\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   parent(): NodeCore {\r\n      let parent = this.current.parentElement\r\n\r\n      this._current = parent === null ? this.current : parent\r\n\r\n      return this\r\n   }\r\n\r\n   _(): NodeCore {                   //  Alias for method 'parent'\r\n      return this.parent()\r\n   }\r\n\r\n   prependElement(node: HTMLElement | NodeCore | null): NodeCore {\r\n      if (node === null) return this\r\n\r\n      let childNode = this.importElement(node)\r\n      let firstChild = this.current.firstChild\r\n\r\n      if (firstChild) {\r\n         this.current.insertBefore(childNode, firstChild)\r\n      }\r\n\r\n      this._current = childNode\r\n\r\n      return this\r\n   }\r\n\r\n   prependElement_(node: HTMLElement | NodeCore | null): NodeCore {\r\n      if (node === null) return this\r\n\r\n      let childNode = this.importElement(node)\r\n      let firstChild = this.current.firstChild\r\n\r\n      if (firstChild) {\r\n         this.current.insertBefore(childNode, firstChild)\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   appendElement(node: HTMLElement | NodeCore | null): NodeCore {\r\n      if (node === null) return this\r\n\r\n      let childNode = this.importElement(node)\r\n\r\n      this._current = this.current.appendChild(childNode)\r\n\r\n      return this\r\n   }\r\n\r\n   importElement(node: HTMLElement | NodeCore): HTMLElement {\r\n      if (!(node instanceof NodeCore)) {\r\n         return node\r\n      }\r\n\r\n      let childIdNodes = node._idSearch\r\n\r\n      for (var key in childIdNodes) {\r\n         this._idSearch[key] = childIdNodes[key]\r\n      }\r\n\r\n      return node.root\r\n   }\r\n\r\n   appendElement_(node: HTMLElement | NodeCore | null): NodeCore {\r\n      if (node === null) return this\r\n\r\n      let childNode = this.importElement(node)\r\n\r\n      this.current.appendChild(childNode)\r\n\r\n      return this\r\n   }\r\n\r\n   gotoRoot(): NodeCore {\r\n      this._current = this.root\r\n\r\n      return this\r\n   }\r\n\r\n   get root(): HTMLElement | HTMLFormElement | HTMLInputElement {\r\n      if (this._root === undefined) throw new Error('Root node not defined!')\r\n\r\n      return this._root\r\n   }\r\n\r\n   get id(): string | null {\r\n      return this.current.getAttribute('id')\r\n   }\r\n\r\n   set innerHTML(html: string) {\r\n      this.current.innerHTML = html\r\n   }\r\n\r\n   get idSearch(): HTMLElement[] {\r\n      return this._idSearch\r\n   }\r\n\r\n   get current(): HTMLElement {\r\n      if (this._current === undefined) throw new Error('Current not set!');\r\n\r\n      return this._current\r\n   }\r\n\r\n   get document(): Document {\r\n      if (this._document === undefined) throw new Error('Document not set!');\r\n\r\n      return this._document\r\n   }\r\n\r\n}","/**\r\n * Event for Observer pattern\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nexport class Event {\r\n   \r\n   private _source?:any\r\n   private _eventNumber?:number\r\n\r\n   constructor(source:any, eventNumber:number){\r\n      this._source = source\r\n      this._eventNumber = eventNumber\r\n   }\r\n\r\n   get source():any{\r\n      if(this._source === undefined) throw new Error('Source not set!')\r\n\r\n      return this._source\r\n   }\r\n\r\n   get eventNumber():number{\r\n      if(this._eventNumber === undefined) throw new Error('Event number not set!')\r\n      \r\n      return this._eventNumber\r\n   }\r\n\r\n}","/**\n * Observer pattern interface\n *\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\n * @copyright     (c) 2021\n * @license       MIT\n */\nimport { Event } from \"./Event\";\nimport { ObserverInterface } from \"./ObserverInterface\";\n\nexport abstract class ObserverAbstract implements ObserverInterface {\n   eventNumber: number;\n   abstract update(event: Event);\n}","import { Event } from \"./Event\"\r\nimport { ObserverInterface } from \"./ObserverInterface\"\r\nimport { SubjectInterface } from \"./SubjectInterface\"\r\n\r\n/**\r\n * Subject for Observer pattern\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nexport abstract class SubjectAbstract implements SubjectInterface {\r\n\r\n   private _observers: any[] = []\r\n   private _pause: any[] = []\r\n\r\n   attach(eventNumber: number, observer: ObserverInterface | CallableFunction): void {\r\n      this._observers[eventNumber] = this._observers[eventNumber] ?? []\r\n      this._observers[eventNumber].push(observer)\r\n   }\r\n\r\n   detach(observer: ObserverInterface | CallableFunction): void {\r\n      this._observers.forEach(\r\n         (observerList) => {\r\n            observerList.flatten(\r\n               (item: ObserverInterface | CallableFunction) => { return item !== observer })\r\n         }\r\n      )\r\n   }\r\n\r\n   notify(source: any, eventNumber: number = null): void {\r\n      let event = source instanceof Event ? source : new Event(source, eventNumber)\r\n      let pause = this._pause\r\n      let observers = this._observers[event.eventNumber] ?? []\r\n\r\n      observers.forEach(element => {\r\n         if (pause.indexOf(element) === -1) {\r\n            typeof element === 'function'\r\n               ? element(event)\r\n               : element.update(event)\r\n         }\r\n      })\r\n   }\r\n\r\n   pauseAttach(observer: ObserverInterface | CallableFunction): void {\r\n      let pause = this._pause\r\n\r\n      if (pause.indexOf(observer) == -1) {\r\n         this._pause.push(observer)\r\n      }\r\n   }\r\n\r\n   pauseDetach(observer: ObserverInterface | CallableFunction): void {\r\n      let pause = this._pause\r\n      let indexOf = pause.indexOf(observer)\r\n\r\n      if (indexOf !== -1) {\r\n         this._pause = [...pause.slice(0, indexOf), ...pause.slice(indexOf + 1)]\r\n      }\r\n   }\r\n\r\n}","// created from 'create-ts-index'\n\nexport * from './ObserverInterface';\nexport * from './ObserverAbstract';\nexport * from './SubjectInterface';\nexport * from './SubjectAbstract';\nexport * from './Event';\n","// created from 'create-ts-index'\nimport * as ObserverPatterns from './ObserverPattern';\nimport * as ChainsOfResponsibility from './ChainOfResponsibility';\n\nexport const ObserverPattern = ObserverPatterns\nexport const ChainOfResponsibility = ChainsOfResponsibility\n\nexport * from './ChainOfResponsibility/BaseHandler';\nexport * from './ConfigurableAbstract';\nexport * from './ChainOfResponsibility/HandlerInterface';\nexport * from './NodeCore';","/**\r\n * GuidHelper\r\n * \r\n * @source        https://raw.githubusercontent.com/NicolasDeveloper/guid-typescript/master/lib/guid.ts\r\n */\r\n// \r\nexport class GuidHelper {\r\n\r\n    static validator = new RegExp(\"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\", \"i\");\r\n    static EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    private value: string;\r\n\r\n    private constructor(guid: string) {\r\n        if (!guid) { throw new TypeError(\"Invalid argument; `value` has no value.\"); }\r\n\r\n        this.value = GuidHelper.EMPTY;\r\n\r\n        if (guid && GuidHelper.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n\r\n    static isGuid(guid: any):boolean {\r\n        const value: string = guid.toString();\r\n\r\n        return guid && (guid instanceof GuidHelper || GuidHelper.validator.test(value));\r\n    }\r\n\r\n    static create(): GuidHelper {\r\n        return new GuidHelper([GuidHelper.gen(2), GuidHelper.gen(1), GuidHelper.gen(1), GuidHelper.gen(1), GuidHelper.gen(3)].join(\"-\"));\r\n    }\r\n\r\n    static createEmpty(): GuidHelper {\r\n        return new GuidHelper(\"emptyGuid\");\r\n    }\r\n\r\n    static parse(guid: string): GuidHelper {\r\n        return new GuidHelper(guid);\r\n    }\r\n\r\n    static raw(): string {\r\n        return [GuidHelper.gen(2), GuidHelper.gen(1), GuidHelper.gen(1), GuidHelper.gen(1), GuidHelper.gen(3)].join(\"-\");\r\n    }\r\n\r\n    private static gen(count: number) : string {\r\n        let out: string = \"\";\r\n\r\n        for (let i: number = 0; i < count; i++) {\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    equals(other: GuidHelper): boolean {\r\n        return GuidHelper.isGuid(other) && this.value === other.toString();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.value === GuidHelper.EMPTY;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.value;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            value: this.value,\r\n        };\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * StringHelper for common string mainpulations\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nexport class StringHelper {\r\n\r\n  static ucFirst(value: string) {\r\n    if (value === undefined) return\r\n\r\n    return value.charAt(0).toUpperCase() + value.slice(1);\r\n  }\r\n\r\n}","// created from 'create-ts-index'\n\nexport * from './GuidHelper';\nexport * from './StringHelper';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// created from 'create-ts-index'\n\nimport * as CoreImport from './Core';\nimport * as HelperImport from './Helper';\n\nexport const Core = CoreImport;\nexport const Helper = HelperImport;"],"names":["setNext","event","this","_nextEvent","handle","data","handler","BaseHandler","configuring","config","defaultConfig","getDefaultConfig","key","methodName","StringHelper","ucFirst","hasMethod","undefined","value","ConfigurableAbstract","tagName","attributes","text","documentX","_idSearch","_click","_change","_document","document","_root","_current","getNodeById","substring","createNode","nodeId","element","getElementById","Error","node","createElement","setAttribute","innerText","click","callable","current","forEach","name","addEventListener","change","moveInNode","tmpNode","replaceWith","newNodeRaw","newNode","importElement","removeChildren","childNodes","child","removeChild","nodeX","NodeCore","root","addSibling_","addSibling","setCurrent","parent","parentNode","insertBefore","addSiblingNode_","addSiblingNode","parentElement","addClass","className","currentClass","trimLeft","removeClass","replace","trim","clear","innerHTML","getAttribute","id","getElementByTagName","getElementsByTagName","getElementByClass","getElementsByClassName","hasAttribute","hasElementById","hasElementByClass","length","a","appendNode","prependNode_","prependNode","firstChild","HTMLElement","appendChild","a_","appendNode_","toHTML","outerHTML","setAttributes","_","prependElement","childNode","prependElement_","appendElement","childIdNodes","appendElement_","gotoRoot","html","source","eventNumber","_source","_eventNumber","Event","ObserverAbstract","_observers","_pause","attach","observer","push","detach","observerList","flatten","item","notify","pause","indexOf","update","pauseAttach","pauseDetach","slice","SubjectAbstract","ObserverPattern","ObserverPatterns","ChainOfResponsibility","ChainsOfResponsibility","guid","TypeError","GuidHelper","EMPTY","isGuid","toString","validator","test","create","gen","join","createEmpty","parse","raw","count","out","i","Math","random","equals","other","isEmpty","toJSON","RegExp","charAt","toUpperCase","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","Core","CoreImport","Helper","HelperImport"],"sourceRoot":""}