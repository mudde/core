{"version":3,"sources":["webpack://MuddeCore/webpack/universalModuleDefinition","webpack://MuddeCore/./src/Core/BaseHandler.ts","webpack://MuddeCore/./src/Core/ConfigurableAbstract.ts","webpack://MuddeCore/./src/Core/Event.ts","webpack://MuddeCore/./src/Core/NodeCore.ts","webpack://MuddeCore/./src/Core/SubjectAbstract.ts","webpack://MuddeCore/./src/Core/index.ts","webpack://MuddeCore/./src/Helper/GuidHelper.ts","webpack://MuddeCore/./src/Helper/StringHelper.ts","webpack://MuddeCore/./src/Helper/index.ts","webpack://MuddeCore/webpack/bootstrap","webpack://MuddeCore/./src/index.ts"],"names":["root","factory","exports","module","define","amd","self","setNext","event","this","_nextEvent","handle","data","BaseHandler","configuring","config","defaultConfig","getDefaultConfig","key","methodName","StringHelper","ucfirst","hasMethod","undefined","value","ConfigurableAbstract","source","eventNumber","_source","_eventNumber","Error","Event","tagName","attributes","text","documentX","_idSearch","_click","_change","_document","document","_root","_current","getNodeById","substr","createNode","nodeId","element","getElementById","node","createElement","setAttribute","innerText","click","callable","current","forEach","name","addEventListener","change","moveInNode","tmpNode","replaceWith","newNodeRaw","newNode","importElement","removeChild","nodeX","NodeCore","addSibling_","addSibling","setCurrent","parent","parentNode","insertBefore","addSiblingNode_","addSiblingNode","parentElement","addClass","className","currentClass","trimLeft","removeClass","replace","trim","clear","innerHTML","getAttribute","id","getElementByTagName","getElementsByTagName","getElementByClass","getElementsByClassName","hasAttribute","hasElementById","hasElementByClass","length","a","appendNode","prependNode_","prependNode","firstChild","HTMLElement","appendChild","a_","appendNode_","toHTML","outerHTML","setAttributes","_","prependElement","childNode","prependElement_","appendElement","childIdNodes","appendElement_","gotoRoot","html","_observers","attach","observer","push","detach","flatten","item","notify","update","SubjectAbstract","guid","TypeError","GuidHelper","EMPTY","isGuid","toString","validator","test","create","gen","join","createEmpty","parse","raw","count","out","i","Math","random","substring","equals","other","isEmpty","toJSON","RegExp","charAt","toUpperCase","slice","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","Core","CoreImport","Helper","HelperImport"],"mappings":"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","file":"core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MuddeCore\"] = factory();\n\telse\n\t\troot[\"MuddeCore\"] = factory();\n})(self, function() {\nreturn ","/**\r\n * Chain of responsibility base handler\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nimport { HandlerInterface } from \"./HandlerInterface\"\r\n\r\nexport abstract class BaseHandler implements HandlerInterface {\r\n\r\n  private _nextEvent?: HandlerInterface | undefined\r\n  \r\n  setNext(event: HandlerInterface): HandlerInterface {\r\n    this._nextEvent = event\r\n\r\n    return event\r\n  }\r\n\r\n  handle(data: any) {\r\n    if (this._nextEvent) {\r\n      this._nextEvent.handle(data)\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  public get nextEvent(): HandlerInterface | undefined {\r\n    return this._nextEvent\r\n  }\r\n}","/**\r\n * This will automatically configure your object\r\n * \r\n * example\r\n * ---------------\r\n * import { ConfigurableAbstract } from \"../node_modules/mudde-core/src/Core/ConfigurableAbstract\";\r\n * \r\n * export class Form extends ConfigurableAbstract {\r\n * \r\n *    private _id: string = ''                   //  <-- empty init\r\n *    private _languages: string[] = []\r\n * \r\n *    constructor(config: any) {\r\n *       super()\r\n * \r\n *       this.configuring(config)\r\n *    }\r\n * \r\n *    getDefaultConfig(): any {                 //  <-- set the default values of all \r\n *       return {                               //      the fields you want to configure\r\n *          id: GuidHelper.raw(),\r\n *          languages: ['nl'],\r\n *       }\r\n *    }\r\n * \r\n *    private configureLanguages(rawFields: Object[]): void {     //  <-- if you want some extra checks\r\n *       .. your code here                                        //      or create a new object create\r\n *    }                                                           //      a method with the following signature\r\n *                                                                //      configure<property name>(rawFields: Object[]): void\r\n *  }\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nimport { StringHelper } from \"../Helper/StringHelper\"\r\n\r\nexport abstract class ConfigurableAbstract{\r\n\r\n   configuring(config: any) {\r\n      let defaultConfig = this.getDefaultConfig()\r\n\r\n      for (let key in defaultConfig) {\r\n         let methodName = 'configure' + StringHelper.ucfirst(key)\r\n         let hasMethod = this[methodName] !== undefined\r\n         let value = config[key] ? config[key] : defaultConfig[key]\r\n\r\n         if (hasMethod) {\r\n            this[methodName](value)\r\n         } else {\r\n            this[key] = value\r\n         }\r\n      }\r\n   }\r\n\r\n   abstract getDefaultConfig(): any\r\n}","/**\r\n * Event for Observer pattern\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nexport class Event {\r\n   \r\n   private _source?:any\r\n   private _eventNumber?:number\r\n\r\n   constructor(source:any, eventNumber:number){\r\n      this._source = source\r\n      this._eventNumber = eventNumber\r\n   }\r\n\r\n   get source():any{\r\n      if(this._source === undefined) throw new Error('Source not set!')\r\n\r\n      return this._source\r\n   }\r\n\r\n   get eventNumber():number{\r\n      if(this._eventNumber === undefined) throw new Error('Event number not set!')\r\n      \r\n      return this._eventNumber\r\n   }\r\n\r\n}","/**\r\n * Generate and maniputate HTMLElements more easy\r\n *\r\n * example\r\n * ---------------\r\n * let node = new NodeCore('div', {class:'container'})\r\n * node.appendElement_('div', {class:'row'})\r\n *        .appendElement_('div', {class:'col'})\r\n *           .appendElement('a', {href:'#', class:'btn btn-default'}, 'Click Me!')\r\n *        ._()\r\n *        .appendElement_('div', {class:'col'})\r\n *           .appendElement('img', {src:'#', class:'photo'})\r\n *        ._()\r\n * -------\r\n * OUTPUTS\r\n * -------\r\n * <div class='container'>\r\n *    <div class='row'>\r\n *       <div class='col'>\r\n *          <a href='#' class='btn btn-default'>\r\n *       </div>\r\n *       <div class='col'>\r\n *          <img src='#' class='photo'>\r\n *       </div>\r\n *    </div>\r\n * </div>\r\n * \r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) copyright 2021 - Olaf Mudde\r\n * @license       MIT\r\n */\r\nexport class NodeCore {\r\n\r\n   private _root?: HTMLElement\r\n   private _current?: HTMLElement\r\n   private _document?: Document\r\n   private _idSearch: HTMLElement[] = []\r\n   private _click: string[] = ['click']\r\n   private _change: string[] = ['keydown', 'keypress', 'keyup', 'mousedown', 'mouseup', 'change']\r\n   \r\n   constructor(tagName: string, attributes?: any, text?: string, documentX?: Document) {\r\n      this._document = documentX ?? document\r\n      \r\n      this._root = this._current = tagName[0] === '#'\r\n         ? this.getNodeById(tagName.substr(1))\r\n         : this.createNode(tagName, attributes, text)\r\n   }\r\n\r\n   private getNodeById(nodeId: string): HTMLElement {\r\n      let document = this.document\r\n      let element = document.getElementById(nodeId)\r\n\r\n      if (!element) throw new Error('Element not found by id!')\r\n\r\n      return element\r\n   }\r\n\r\n   private createNode(tagName: string, attributes?: any, text?: string): HTMLElement {\r\n      let document = this.document\r\n      let node = document.createElement(tagName)\r\n\r\n      if (attributes) {\r\n         for (let key in attributes) {\r\n            let value = attributes[key]\r\n\r\n            if (key === 'id') {\r\n               this._idSearch[value] = node\r\n            }\r\n\r\n            node.setAttribute(key, value)\r\n         }\r\n      }\r\n\r\n      if (text) {\r\n         node.innerText = text\r\n      }\r\n\r\n      return node\r\n   }\r\n\r\n   click(callable: EventListener):NodeCore {\r\n      let current: HTMLElement = this.current\r\n      \r\n      this._click.forEach((name) => {\r\n         current.addEventListener(name, callable)\r\n      })\r\n\r\n      return this\r\n   }\r\n\r\n   change(callable: EventListener): NodeCore {\r\n      let current: HTMLElement = this.current\r\n      \r\n      this._change.forEach((name) => {\r\n         current.addEventListener(name, callable)\r\n      })\r\n\r\n      return this\r\n   }\r\n\r\n   moveInNode(callable: CallableFunction): NodeCore {\r\n      let current: HTMLElement = this.current\r\n      let tmpNode = this.document.createElement('div')\r\n\r\n      current.replaceWith(tmpNode)\r\n\r\n      let newNodeRaw = callable(current)\r\n      let newNode = this.importElement(newNodeRaw)\r\n\r\n      tmpNode.replaceWith(newNode)\r\n\r\n      return this\r\n   }\r\n\r\n   removeChild(node: NodeCore | HTMLElement): NodeCore {\r\n      let nodeX = node instanceof NodeCore ? node.root : node\r\n\r\n      this.current.removeChild(nodeX)\r\n\r\n      return this\r\n   }\r\n\r\n   addSibling_(tagName: string, attributes?: any, text?: string): NodeCore {\r\n      return this.addSibling(tagName, attributes, text, true)\r\n   }\r\n\r\n   addSibling(tagName: string, attributes?: any, text?: string, setCurrent: boolean = false): NodeCore {\r\n      let newNode = this.createNode(tagName, attributes, text)\r\n      let parent = this.current.parentNode;\r\n\r\n      parent?.insertBefore(newNode, this.current)\r\n\r\n      if (setCurrent) {\r\n         this._current = newNode\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   addSiblingNode_(node: NodeCore): NodeCore {\r\n      return this.addSiblingNode(node, true)\r\n   }\r\n\r\n   addSiblingNode(node: NodeCore, setCurrent: boolean = false): NodeCore {\r\n      let newNode = this.importElement(node)\r\n      let current = this.current\r\n      let parent = current.parentElement;\r\n\r\n      parent?.insertBefore(newNode, current)\r\n\r\n      if (setCurrent) {\r\n         this._current = newNode\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   addClass(className: string): NodeCore {\r\n      let currentClass = this.current.className\r\n\r\n      this.current.setAttribute('class', `${currentClass} ${className}`.trimLeft())\r\n\r\n      return this\r\n   }\r\n\r\n   removeClass(className: string): NodeCore {\r\n      let currentClass = ' ' + this.current.className + ' '\r\n\r\n      this.current.setAttribute('class', currentClass.replace(' ' + className + ' ', ' ').trim())\r\n\r\n      return this\r\n   }\r\n\r\n\r\n   clear() {\r\n      let root = this._current = this.root\r\n\r\n      root.innerHTML = ''\r\n   }\r\n\r\n   getAttribute(name: string): string | null {\r\n      return this.current.getAttribute(name)\r\n   }\r\n\r\n   getElementById(id: string): NodeCore {\r\n      if (id in this._idSearch) {\r\n         this._current = this._idSearch[id]\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   getElementByTagName(tagName: string): HTMLCollectionOf<Element> {\r\n      let element = this.root.getElementsByTagName(tagName)\r\n\r\n      return element\r\n   }\r\n\r\n   getElementByClass(className: string): HTMLCollectionOf<Element> {\r\n      let element = this.root.getElementsByClassName(className)\r\n\r\n      return element\r\n   }\r\n\r\n   hasAttribute(name: string): boolean {\r\n      return this.current.hasAttribute(name)\r\n   }\r\n\r\n   hasElementById(id: string): boolean {\r\n      return id in this._idSearch\r\n   }\r\n\r\n   hasElementByClass(className: string): boolean {\r\n      return this.root.getElementsByClassName(className).length !== 0\r\n   }\r\n\r\n   a(tagName: string, attributes?: any, text?: string, setCurrent?: boolean): NodeCore {\r\n      return this.appendNode(tagName, attributes, text, setCurrent)\r\n   }\r\n\r\n   prependNode_(tagName: string, attributes?: any, text?: string): NodeCore {\r\n      return this.prependNode(tagName, attributes, text, true)\r\n   }\r\n\r\n   prependNode(tagName: string, attributes?: any, text?: string, setCurrent?: boolean): NodeCore {\r\n      let firstChild = this.current.firstChild\r\n\r\n      if (firstChild) {\r\n         let HTMLElement = this.current.insertBefore(this.createNode(tagName, attributes, text), firstChild)\r\n\r\n         if (setCurrent === true) {\r\n            this._current = HTMLElement\r\n         }\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   appendNode(tagName: string, attributes?: any, text?: string, setCurrent: boolean = false): NodeCore {\r\n      let newNode = this.createNode(tagName, attributes, text)\r\n      let HTMLElement = this.current.appendChild(newNode)\r\n\r\n      HTMLElement.innerText = text ? text : ''\r\n\r\n      if (setCurrent === true) {\r\n         this._current = HTMLElement\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   a_(tagName: string, attributes?: any, text?: string): NodeCore {\r\n      return this.appendNode(tagName, attributes, text, true)\r\n   }\r\n\r\n   appendNode_(tagName: string, attributes?: any, text?: string): NodeCore {\r\n      return this.appendNode(tagName, attributes, text, true)\r\n   }\r\n\r\n   toHTML(outerHTML: boolean = true): string {\r\n      let root: HTMLElement = this.root\r\n      return outerHTML ? root.outerHTML : root.innerHTML\r\n   }\r\n\r\n   setAttributes(attributes: any): NodeCore {\r\n      let node = this.current\r\n\r\n      for (let key in attributes) {\r\n         let value = attributes[key]\r\n\r\n         if (key === 'id') {\r\n            this._idSearch[value] = node\r\n         }\r\n\r\n         node.setAttribute(key, value)\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   parent(): NodeCore {\r\n      let parent = this.current.parentElement\r\n\r\n      this._current = parent === null ? this.current : parent\r\n\r\n      return this\r\n   }\r\n\r\n   _(): NodeCore {                   //  Alias for method 'parent'\r\n      return this.parent()\r\n   }\r\n\r\n   prependElement(node: HTMLElement | NodeCore | null): NodeCore {\r\n      if (node === null) return this\r\n\r\n      let childNode = this.importElement(node)\r\n      let firstChild = this.current.firstChild\r\n\r\n      if (firstChild) {\r\n         this.current.insertBefore(childNode, firstChild)\r\n      }\r\n\r\n      this._current = childNode\r\n\r\n      return this\r\n   }\r\n\r\n   prependElement_(node: HTMLElement | NodeCore | null): NodeCore {\r\n      if (node === null) return this\r\n\r\n      let childNode = this.importElement(node)\r\n      let firstChild = this.current.firstChild\r\n\r\n      if (firstChild) {\r\n         this.current.insertBefore(childNode, firstChild)\r\n      }\r\n\r\n      return this\r\n   }\r\n\r\n   appendElement(node: HTMLElement | NodeCore | null): NodeCore {\r\n      if (node === null) return this\r\n\r\n      let childNode = this.importElement(node)\r\n\r\n      this._current = this.current.appendChild(childNode)\r\n\r\n      return this\r\n   }\r\n\r\n   importElement(node: HTMLElement | NodeCore): HTMLElement {\r\n      if (!(node instanceof NodeCore)) {\r\n         return node\r\n      }\r\n\r\n      let childIdNodes = node._idSearch\r\n\r\n      for (var key in childIdNodes) {\r\n         this._idSearch[key] = childIdNodes[key]\r\n      }\r\n\r\n      return node.root\r\n   }\r\n\r\n   appendElement_(node: HTMLElement | NodeCore | null): NodeCore {\r\n      if (node === null) return this\r\n\r\n      let childNode = this.importElement(node)\r\n\r\n      this.current.appendChild(childNode)\r\n\r\n      return this\r\n   }\r\n\r\n   gotoRoot(): NodeCore {\r\n      this._current = this.root\r\n\r\n      return this\r\n   }\r\n\r\n   get root(): HTMLElement {\r\n      if (this._root === undefined) throw new Error('Root node not defined!')\r\n\r\n      return this._root\r\n   }\r\n\r\n   get id(): string | null {\r\n      return this.current.getAttribute('id')\r\n   }\r\n\r\n   set innerHTML(html: string) {\r\n      this.current.innerHTML = html\r\n   }\r\n\r\n   get idSearch(): HTMLElement[] {\r\n      return this._idSearch\r\n   }\r\n\r\n   get current(): HTMLElement {\r\n      if (this._current === undefined) throw new Error('Current not set!');\r\n\r\n      return this._current\r\n   }\r\n\r\n   get document(): Document {\r\n      if (this._document === undefined) throw new Error('Document not set!');\r\n\r\n      return this._document\r\n   }\r\n\r\n}","import { Event } from \"./Event\"\r\nimport { ObserverInterface } from \"./ObserverInterface\"\r\nimport { SubjectInterface } from \"./SubjectInterface\"\r\n\r\n/**\r\n * Subject for Observer pattern\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nexport abstract class SubjectAbstract implements SubjectInterface {\r\n\r\n   private _observers: any[] = []\r\n\r\n   attach(observer: ObserverInterface): void {\r\n      var eventNumber: number = observer.eventNumber || null\r\n      if (!eventNumber) return\r\n      \r\n      this._observers[eventNumber] = this._observers[eventNumber] ?? []\r\n      this._observers[eventNumber].push(observer)\r\n   }\r\n\r\n   detach(observer: ObserverInterface): void {\r\n      var eventNumber: number = observer.eventNumber || null\r\n      if (!eventNumber) return\r\n\r\n      if (this._observers[eventNumber]) {\r\n         this._observers[eventNumber].flatten((item: ObserverInterface) => { return item !== observer })\r\n      }\r\n   }\r\n\r\n   notify(source: any, eventNumber: number = null): void {\r\n      var event = source instanceof Event ? source : new Event(source, eventNumber)\r\n\r\n      if (this._observers[eventNumber]) {\r\n         this._observers[eventNumber].forEach(element => {\r\n            element.update(event)\r\n         })\r\n      }\r\n   }\r\n\r\n}","// created from 'create-ts-index'\n\nexport * from './BaseHandler';\nexport * from './ConfigurableAbstract';\nexport * from './Event';\nexport * from './HandlerInterface';\nexport * from './NodeCore';\nexport * from './ObserverInterface';\nexport * from './SubjectInterface';\nexport * from './SubjectAbstract';\n","/**\r\n * GuidHelper\r\n * \r\n * @source        https://raw.githubusercontent.com/NicolasDeveloper/guid-typescript/master/lib/guid.ts\r\n */\r\n// \r\nexport class GuidHelper {\r\n\r\n    static validator = new RegExp(\"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\", \"i\");\r\n    static EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    private value: string;\r\n\r\n    private constructor(guid: string) {\r\n        if (!guid) { throw new TypeError(\"Invalid argument; `value` has no value.\"); }\r\n\r\n        this.value = GuidHelper.EMPTY;\r\n\r\n        if (guid && GuidHelper.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n\r\n    static isGuid(guid: any):boolean {\r\n        const value: string = guid.toString();\r\n\r\n        return guid && (guid instanceof GuidHelper || GuidHelper.validator.test(value));\r\n    }\r\n\r\n    static create(): GuidHelper {\r\n        return new GuidHelper([GuidHelper.gen(2), GuidHelper.gen(1), GuidHelper.gen(1), GuidHelper.gen(1), GuidHelper.gen(3)].join(\"-\"));\r\n    }\r\n\r\n    static createEmpty(): GuidHelper {\r\n        return new GuidHelper(\"emptyGuid\");\r\n    }\r\n\r\n    static parse(guid: string): GuidHelper {\r\n        return new GuidHelper(guid);\r\n    }\r\n\r\n    static raw(): string {\r\n        return [GuidHelper.gen(2), GuidHelper.gen(1), GuidHelper.gen(1), GuidHelper.gen(1), GuidHelper.gen(3)].join(\"-\");\r\n    }\r\n\r\n    private static gen(count: number) : string {\r\n        let out: string = \"\";\r\n\r\n        for (let i: number = 0; i < count; i++) {\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    equals(other: GuidHelper): boolean {\r\n        return GuidHelper.isGuid(other) && this.value === other.toString();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.value === GuidHelper.EMPTY;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.value;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            value: this.value,\r\n        };\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * StringHelper for common string mainpulations\r\n *\r\n * @author        Olaf Mudde <olaf.mudde@xs4all.nl>\r\n * @copyright     (c) 2021\r\n * @license       MIT\r\n */\r\nexport class StringHelper {\r\n\r\n  static ucfirst(value: string) {\r\n    if (value === undefined) return\r\n\r\n    return value.charAt(0).toUpperCase() + value.slice(1);\r\n  }\r\n\r\n}","// created from 'create-ts-index'\n\nexport * from './GuidHelper';\nexport * from './StringHelper';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// created from 'create-ts-index'\n\nimport * as CoreImport from './Core';\nimport * as HelperImport from './Helper';\n\nexport const Core = CoreImport;\nexport const Helper = HelperImport;"],"sourceRoot":""}